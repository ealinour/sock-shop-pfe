---
apiVersion: v1
kind: Namespace
metadata:
  name: sock-shop
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mizutest-websocket-client
    name: mizutest-websocket-client
    version: v0.1.0
  name: mizutest-websocket-client
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mizutest-websocket-client
  template:
    metadata:
      labels:
        app: mizutest-websocket-client
        name: mizutest-websocket-client
        version: v0.1.0
    spec:
      containers:
      - command:
        - sh
        - -c
        - ./run.sh --compressed false  --server ws://10.0.20.136
        env:
        - name: PYTHONUNBUFFERED
          value: '1'
        - name: PYTHONIOENCODING
          value: UTF-8
        image: kubeshark/mizutest-websocket-client:latest
        imagePullPolicy: Always
        name: mizutest-websocket-client
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 50m
            memory: 200Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10001
      nodeSelector:
        kubernetes.io/os: linux
---
# Deployment for the WebSocket server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: websocket-server-deployment
  namespace: sock-shop
  labels:
    app: websocket-server
spec:
  replicas: 1  # Adjust the number of replicas as needed
  selector:
    matchLabels:
      app: websocket-server
  template:
    metadata:
      labels:
        app: websocket-server
    spec:
      containers:
      - name: websocket-server-container
        image: kubeshark/mizutest-websocket-server:latest  # Replace with your actual image name and version
        ports:
        - containerPort: 80  # Port exposed by your WebSocket server inside the container
        env:
        - name: PORT
          value: "80"  # The port the app listens on, passed via environment variable
---
# Service to expose the WebSocket server within the sock-shop namespace
apiVersion: v1
kind: Service
metadata:
  name: websocket-server-service
  namespace: sock-shop
  labels:
    app: websocket-server
spec:
  selector:
    app: websocket-server
  ports:
  - protocol: TCP
    port: 80          # Port the service exposes (external port)
    targetPort: 80    # The port the WebSocket server listens on inside the container
  type: ClusterIP  # This makes the service accessible only within the cluster
